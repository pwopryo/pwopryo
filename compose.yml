services:
  traefik:
    image: traefik:v2.5
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
      - "5050:5050"
    volumes:
      - ./traefik/traefik.yml:/etc/traefik/traefik.yml
      - ./traefik/dynamic.yml:/etc/traefik/dynamic.yml
      - ./traefik/certs:/etc/certs
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    healthcheck:
      test: ["CMD", "traefik", "healthcheck"]
      interval: 10s
      timeout: 2s
      retries: 3
      start_period: 5s
    environment:
      - CF_DNS_API_TOKEN=${POSTGRES_DB:-pwopryo}
      - CF_API_EMAIL=${POSTGRES_DB:-pwopryo}
    deploy:
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.dashboard.rule=Host(`admin.pwopryo.com`)"
        - "traefik.http.routers.dashboard.service=api@internal"
        - "traefik.http.routers.dashboard.entrypoints=websecure"
        - "traefik.http.routers.dashboard.tls=true"
        - "traefik.http.routers.dashboard.tls.certresolver=myresolver"
        - "traefik.http.routers.dashboard.middlewares=auth"
        - "traefik.http.middlewares.auth.basicauth.users="
        - "traefik.http.services.dashboard.loadbalancer.server.port=8080"

  # The frontend service
  front:
    image: pwopryo/front:v1.0.0
    container_name: pwopryo-front
    depends_on:
      api:
        condition: service_healthy
    deploy:
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.frontend.rule=Host(`pwopryo.com`)"
        - "traefik.http.routers.frontend.entrypoints=web"
        - "traefik.http.routers.frontend.middlewares=redirectscheme"
        - "traefik.http.routers.frontend-secure.rule=Host(`pwopryo.com`)"
        - "traefik.http.routers.frontend-secure.entrypoints=websecure"
        - "traefik.http.routers.frontend-secure.tls.certresolver=myresolver"
        - "traefik.http.routers.frontend-secure.middlewares=mid-ratelimit"
        - "traefik.http.services.frontend-secure.loadbalancer.server.port=80"
        - "traefik.http.middlewares.mid-ratelimit.ratelimit.average=20"
        - "traefik.http.middlewares.redirectscheme.redirectscheme.scheme=https"
        - "traefik.http.middlewares.redirectscheme.redirectscheme.permanent=true"
      restart_policy:
        condition: on-failure

  # The api service
  api:
    image: pwopryo/api:v1.0.0
    container_name: pwopryo-api
    depends_on:
      - db
    healthcheck:
      test: curl -f http://localhost:3333/health || exit 1
      interval: 10s
      start_period: 30s
      timeout: 60s
    deploy:
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.backend.rule=Host(`api.pwopryo.com`)"
        - "traefik.http.routers.backend.entrypoints=web"
        - "traefik.http.routers.backend.middlewares=redirectscheme"
        - "traefik.http.routers.backend-secure.rule=Host(`api.pwopryo.com`)"
        - "traefik.http.routers.backend-secure.entrypoints=websecure"
        - "traefik.http.routers.backend-secure.tls.certresolver=myresolver"
        - "traefik.http.services.backend-secure.loadbalancer.server.port=3333"
        - "traefik.http.middlewares.redirectscheme.redirectscheme.scheme=https"
        - "traefik.http.middlewares.redirectscheme.redirectscheme.permanent=true"
      restart_policy:
        condition: on-failure

  # The pgadmin service
  pgadmin:
    image: dpage/pgadmin4
    depends_on:
      - db
    environment:
      PGADMIN_DEFAULT_EMAIL: ${POSTGRES_DB:-pwopryo}
      PGADMIN_DEFAULT_PASSWORD: ${POSTGRES_DB:-changeme}
    deploy:
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.pgadmin.rule=Host(`pgadmin.pwopryo.com`)"
        - "traefik.http.routers.pgadmin.entrypoints=web"
        - "traefik.http.routers.pgadmin.middlewares=redirectscheme"
        - "traefik.http.routers.pgadmin-secure.rule=Host(`pgadmin.pwopryo.com`)"
        - "traefik.http.routers.pgadmin-secure.entrypoints=websecure"
        - "traefik.http.routers.pgadmin-secure.tls.certresolver=myresolver"
        - "traefik.http.services.pgadmin-secure.loadbalancer.server.port=80"
        - "traefik.http.middlewares.redirectscheme.redirectscheme.scheme=https"
        - "traefik.http.middlewares.redirectscheme.redirectscheme.permanent=true"
      restart_policy:
        condition: on-failure

  # The database service
  db:
    image: postgres:14-alpine
    container_name: pwopryo-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-pwopryo}
      POSTGRES_USER: ${POSTGRES_USER:-pwopryo}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-changeme}
    volumes:
      - pwopryo_postgres_data:/var/lib/postgresql/data

volumes:
  pwopryo_postgres_data:
